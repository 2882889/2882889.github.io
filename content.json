[{"title":"PicGo+Github搭建免费图床","date":"2024-02-20T07:30:40.000Z","path":"2024/02/20/PicGo-Github搭建免费图床/","text":"前言平时在写博客的时候,经常需要插入一些图片,但是好用的图床通常都是要钱的,这不符合咱的气质,找了半天,发现了用Github当图床的方法,毕竟不怕跑路,还免费 准备工作 Github账号1.1 创建一个仓库用来存放图片1.2 生成一个token,用来访问仓库 PicGo软件 生成token 进入”设置” 点击左边最底部Developer settings 生成token 注意: 生成的时候需要勾选repo 下载PicGo访问PicGo的地址PicGo,下载对应的软件 安装完成后,按如下设置,将你的仓库信息填写完成 如果提示软件已经损坏,则需要打开”任何来源”,打开方法:终端输入: 1sudo spctl --master-disable","tags":[{"name":"日常","slug":"日常","permalink":"http://yoursite.com/tags/%E6%97%A5%E5%B8%B8/"},{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"}]},{"title":"hexo部署报错解决","date":"2017-12-06T15:21:15.000Z","path":"2017/12/06/Hexo部署报错解决/","text":"前言由于换了一个电脑搭建hexo,在部署的时候报错了，这里记录一下解决办法： 删除.deploy_git 报错操作从git拉下代码，在新搭建的hexo环境中hexo d部署的时候报一下错误 1234567891011121314~/Desktop/myBlog (master ✘)✖✹✭ ᐅ hexo dINFO Deploying: gitINFO Clearing .deploy_git folder...INFO Copying files from public folder...fatal: in unpopulated submodule &#x27;.deploy_git&#x27;FATAL Something&#x27;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.htmlError: fatal: in unpopulated submodule &#x27;.deploy_git&#x27; at ChildProcess.&lt;anonymous&gt; (/Users/xxx/Desktop/myBlog/node_modules/hexo-util/lib/spawn.js:37:17) at ChildProcess.emit (events.js:182:13) at maybeClose (internal/child_process.js:978:16) at Socket.stream.socket.on (internal/child_process.js:395:11) at Socket.emit (events.js:182:13) at Pipe._handle.close (net.js:616:12) 解决办法解决办法很简单，把博客目录下的.deploy_git删除重新构建部署就好，命令如下 123rm -rf .deploy_githexo ghexo d 看来以后要把这个文件夹添加到.gitignore文件中试试","tags":[{"name":"日常","slug":"日常","permalink":"http://yoursite.com/tags/%E6%97%A5%E5%B8%B8/"},{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"}]},{"title":"Hexo创建一个blog","date":"2016-08-03T12:38:44.000Z","path":"2016/08/03/Hexo创建一个blog/","text":"post布局当你的Hexo已经搭建完成的时候，你就可以写blog了，最简单的创建一个blog的方法就是调用 1hexo new blog_title 执行完成之后，hexo会在根目录的source文件夹下创建一个_post文件夹，并在里面生成一个blog_title.md文件。 这个创建blog的完整命令是 1hexo new post blog_title 这个就是post布局，当hexo g 或者 s 或者 d的时候，会把_post文件夹中的文件都生成静态页面 draft布局1hexo new draft blog_title 当使用draft布局创建一个博客的时候，hexo也会在根目录的source文件夹下创建一个_draft文件夹，并在里面生成一个blog_title.md文件， 但是在hexo g 或者 s 或者 d的时候，是无法看到你创建的博客的 因为draft布局是草稿布局，在_draft文件夹中的博客都认为是草稿，不能发布 那当你想看看你的草稿写出来的效果怎么样的时候，你可以使用下面命令将草稿部署到本地 12hexo g --drafthexo s --draft 如果你的博客已经完成了，你可以使用下面的命令将他发布 1hexo publish draft blog_title.md page布局1hexo new page &quot;about&quot; 当使用page布局创建一个博客的时候，hexo会在根目录的source文件夹下创建一个about文件夹，并在里面生成一个index.md文件 当你部署完，你需要使用子路径去访问他 eg： 1http://localhost:4000/about 布局文件在新建文章时，Hexo 会根据 scaffolds 文件夹内相对应的文件来建立文件，例如： 1hexo new photo &quot;My Gallery&quot;","tags":[{"name":"日常","slug":"日常","permalink":"http://yoursite.com/tags/%E6%97%A5%E5%B8%B8/"},{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"}]},{"title":"Hexo的安装和使用","date":"2016-08-02T11:13:00.000Z","path":"2016/08/02/Hexo的安装和使用/","text":"一、hexo的安装1、安装Node.jsHexo是基于Node.js的静态博客框架，所以要安装Hexo先要安装Node.js。 Node.js的安装方法非常简单，从Node.js官网下载安装包安装就好 2、安装gitmac下安装了Xcode就会有git 3、安装Hexo在终端执行如下命令 1sudo npm install -g hexo 等待安装成功 安装完成后使用查看版本命令，看看是否安装成功 1hexo -v 如果正常显示版本说明安装成功 注意如果报如下错误： 123456789101112Error: The module &#x27;/Users/***/Desktop/***/node_modules/dtrace-provider/build/Release/DTraceProviderBindings.node&#x27;was compiled against a different Node.js version usingNODE_MODULE_VERSION 48. This version of Node.js requiresNODE_MODULE_VERSION 67. Please try re-compiling or re-installingthe module (for instance, using `npm rebuild` or `npm install`). at Object.Module._extensions..node (internal/modules/cjs/loader.js:751:18) at Module.load (internal/modules/cjs/loader.js:620:32) at tryModuleLoad (internal/modules/cjs/loader.js:560:12) at Function.Module._load (internal/modules/cjs/loader.js:552:3) at Module.require (internal/modules/cjs/loader.js:658:17) ... 执行下面操作： 12341. cd hexo 根目录2. rm -rvf node_modules3. npm install 这是因为node_modules的缓存存在版本问题 二、hexo的使用创建一个blog库1hexo init blog blog是文件夹的名称，可以随便起 创建一个blog1hexo new blog_title 这个样就可以创建一个title是blog_title的博客了 这个只是一个默认参数的简写命令 生成静态页面123hexo generate 或者：hexo g 部署到本地123hexo server 或者：hexo s 部署完可以在浏览器中打开预设的地址查看blog 部署到远端123hexo deploy 或者：hexo d 要部署到远端需要配置博客更目录下的_config.yml文件中的内容 1234deploy: type: git repo: 自己的git地址 branch: master 2021更新问题今天在一台新电脑上部署的时候发现进入的是空白页，在本地测试的时候有如下错误提示 1234567(node:9876) Warning: Accessing non-existent property &#x27;lineno&#x27; of module exports inside circular dependency(Use `node --trace-warnings ...` to show where the warning was created)(node:9876) Warning: Accessing non-existent property &#x27;column&#x27; of module exports inside circular dependency(node:9876) Warning: Accessing non-existent property &#x27;filename&#x27; of module exports inside circular dependency(node:9876) Warning: Accessing non-existent property &#x27;lineno&#x27; of module exports inside circular dependency(node:9876) Warning: Accessing non-existent property &#x27;column&#x27; of module exports inside circular dependency(node:9876) Warning: Accessing non-existent property &#x27;filename&#x27; of module exports inside circular dependency 在github上看，部署的index文件没有内容, 问题原因: node.js版本太高了 解决办法一: 降级node.js 步骤： 123456789//安装node.js版本管理软件 nsudo npm install -g n//查看n 是否安装成功n -V//安装指定版本 nodesudo n 13.14 解决办法二: 修改package.json中的hexo-renderer-stylus的版本号为^2.0.1, 然后重新npm安装","tags":[{"name":"日常","slug":"日常","permalink":"http://yoursite.com/tags/%E6%97%A5%E5%B8%B8/"},{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"}]}]